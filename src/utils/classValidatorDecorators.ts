export const classValidatorDecorators = [
    "Allow",
    "ArrayContains",
    "ArrayMaxSize",
    "ArrayMinSize",
    "ArrayNotContains",
    "ArrayNotEmpty",
    "ArrayUnique",
    "Contains",
    "Equals",
    "IsAlpha",
    "IsAlphanumeric",
    "IsArray",
    "IsAscii",
    "IsBIC",
    "IsBase32",
    "IsBase64",
    "IsBoolean",
    "IsBooleanString",
    "IsBtcAddress",
    "IsByteLength",
    "IsCreditCard",
    "IsCurrency",
    "IsDataURI",
    "IsDate",
    "IsDateString",
    "IsDecimal",
    "IsDefined",
    "IsDivisibleBy",
    "IsEAN",
    "IsEmail",
    "IsEmpty",
    "IsEnum",
    "IsEthereumAddress",
    "IsFQDN",
    "IsFirebasePushId",
    "IsFullWidth",
    "IsHSL",
    "IsHalfWidth",
    "IsHash",
    "IsHexColor",
    "IsHexadecimal",
    "IsIBAN",
    "IsIP",
    "IsISBN",
    "IsISIN",
    "IsISO31661Alpha2",
    "IsISO31661Alpha3",
    "IsISO8601",
    "IsISRC",
    "IsISSN",
    "IsIdentityCard",
    "IsIn",
    "IsInstance",
    "IsInt",
    "IsJSON",
    "IsJWT",
    "IsLatLong",
    "IsLatitude",
    "IsLocale",
    "IsLongitude",
    "IsLowercase",
    "IsMACAddress", // "IsMacAddress",
    "IsMagnetURI",
    "IsMilitaryTime",
    "IsMimeType",
    "IsMobilePhone",
    "IsMongoId",
    "IsMultibyte",
    "IsNegative",
    "IsNotEmpty",
    "IsNotEmptyObject",
    "IsNotIn",
    "IsNumber",
    "IsNumberString",
    "IsObject",
    "IsOctal",
    "IsOptional",
    "IsPassportNumber",
    "IsPhoneNumber",
    "IsPort",
    "IsPositive",
    "IsPostalCode",
    "IsRFC3339",
    "IsRgbColor",
    "IsSemVer",
    "IsString",
    "IsSurrogatePair",
    "IsUUID",
    "IsUppercase",
    "IsUrl",
    "IsVariableWidth",
    "Length",
    "Matches",
    "Max",
    "MaxDate",
    "MaxLength",
    "Min",
    "MinDate",
    "MinLength",
    "NotContains",
    "NotEquals",
    "Validate",
    "ValidateBy",
    "ValidateIf",
    "ValidateNested",
];

type ClassValidatorDecorators = typeof classValidatorDecorators[number];

export const classValidatorDecoratorsConflicts: {
    [decorator in ClassValidatorDecorators]: ClassValidatorDecorators[];
} = {
    Allow: [],
    ArrayContains: [],
    ArrayMaxSize: [],
    ArrayMinSize: [],
    ArrayNotContains: [],
    ArrayNotEmpty: [],
    ArrayUnique: [],
    Contains: [],
    Equals: [],
    IsAlpha: [],
    IsAlphanumeric: [],
    IsArray: [],
    IsAscii: [],
    IsBIC: [],
    IsBase32: [],
    IsBase64: [],
    IsBoolean: [],
    IsBooleanString: [],
    IsBtcAddress: [],
    IsByteLength: [],
    IsCreditCard: [],
    IsCurrency: [],
    IsDataURI: [],
    IsDate: [],
    IsDateString: [],
    IsDecimal: [],
    IsDefined: ["IsOptional"],
    IsDivisibleBy: [],
    IsEAN: [],
    IsEmail: [],
    IsEmpty: [],
    IsEnum: [],
    IsEthereumAddress: [],
    IsFQDN: [],
    IsFirebasePushId: [],
    IsFullWidth: [],
    IsHSL: [],
    IsHalfWidth: [],
    IsHash: [],
    IsHexColor: [],
    IsHexadecimal: [],
    IsIBAN: [],
    IsIP: [],
    IsISBN: [],
    IsISIN: [],
    IsISO31661Alpha2: [],
    IsISO31661Alpha3: [],
    IsISO8601: [],
    IsISRC: [],
    IsISSN: [],
    IsIdentityCard: [],
    IsIn: [],
    IsInstance: [],
    IsInt: [],
    IsJSON: [],
    IsJWT: [],
    IsLatLong: [],
    IsLatitude: [],
    IsLocale: [],
    IsLongitude: [],
    IsLowercase: [],
    IsMACAddress: [], // "IsMacAddress"
    IsMagnetURI: [],
    IsMilitaryTime: [],
    IsMimeType: [],
    IsMobilePhone: [],
    IsMongoId: [],
    IsMultibyte: [],
    IsNegative: [],
    IsNotEmpty: [],
    IsNotEmptyObject: [],
    IsNotIn: [],
    IsNumber: [],
    IsNumberString: [],
    IsObject: [],
    IsOctal: [],
    IsOptional: ["IsDefined"],
    IsPassportNumber: [],
    IsPhoneNumber: [],
    IsPort: [],
    IsPositive: [],
    IsPostalCode: [],
    IsRFC3339: [],
    IsRgbColor: [],
    IsSemVer: [],
    IsString: [],
    IsSurrogatePair: [],
    IsUUID: [],
    IsUppercase: [],
    IsUrl: [],
    IsVariableWidth: [],
    Length: [],
    Matches: [],
    Max: [],
    MaxDate: [],
    MaxLength: [],
    Min: [],
    MinDate: [],
    MinLength: [],
    NotContains: [],
    NotEquals: [],
    Validate: [],
    ValidateBy: [],
    ValidateIf: [],
    ValidateNested: [],
};
